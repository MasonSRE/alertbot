version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: alertbot_postgres
    environment:
      POSTGRES_DB: alertbot
      POSTGRES_USER: alertbot
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alertbot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端服务 - 开发模式
  alertbot-backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: alertbot_backend
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=alertbot
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=alertbot
      - JWT_SECRET=dev-jwt-secret-key
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/bin  # 防止覆盖编译后的二进制文件
    restart: unless-stopped

  # 前端服务 - 开发模式
  alertbot-frontend:
    image: node:18-alpine
    container_name: alertbot_frontend
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./web:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      - NODE_ENV=development
    depends_on:
      - alertbot-backend

volumes:
  postgres_data: