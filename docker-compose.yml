services:
  postgres:
    image: postgres:15-alpine
    container_name: alertbot_postgres
    environment:
      POSTGRES_DB: alertbot
      POSTGRES_USER: alertbot
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U alertbot"]
      interval: 10s
      timeout: 5s
      retries: 5

  alertbot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alertbot_server
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=alertbot
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=alertbot
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./configs:/app/configs
    restart: unless-stopped

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile.simple
    container_name: alertbot_frontend
    ports:
      - "3000:3000"
    depends_on:
      - alertbot
    restart: unless-stopped
    environment:
      - NODE_ENV=production

volumes:
  postgres_data: